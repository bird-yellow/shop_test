<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sun.Dao.ItemCategoryDao">
            <resultMap id="ResultMapItemCategory" type="ItemCategory">
                    <result property="id" column="id" jdbcType="INTEGER"/>
                    <result property="name" column="name" jdbcType="VARCHAR"/>
                    <result property="pid" column="pid" jdbcType="INTEGER"/>
                    <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
            </resultMap>

<!--            数据库字段-->
            <sql id="ItemCategory_field">
                    id,name,pid,isDelete
            </sql>
<!--            从java对象中读取数据-->
            <sql  id="ItemCategory_insert">
                    #{id},#{name},#{pid},#{isDelete}
            </sql>
<!--            查询的条件-->
            <sql id="ItemCategory_where">
                <if test="id != null and id !=''">and id=#{id}</if>
                <if test="name != null and name !=''">and name=#{name}</if>
                <if test="pid != null and pid !=''">and pid=#{pid}</if>
                <if test="isDelete != null and isDelete !=''">and  isDelete=#{isDelete}</if>
            </sql>

<!--            更新条件-->
            <sql id="ItemCategory_update">
                <if test="name != null and name !=''">name=#{name},</if>
                <if test="pid != null and pid !=''">pid=#{pid},</if>
                <if test="isDelete != null and isDelete !=''">isDelete=#{isDelete},</if>
            </sql>

            <insert id="insert" parameterType="ItemCategory" useGeneratedKeys="true" keyColumn="id">
                    insert into item_category values(<include refid="ItemCategory_insert"></include>)
            </insert>

<!--            根据id删除对象-->
            <delete id="deleteById" parameterType="java.lang.Integer">
                    delete from item_category
                    where id=#{id}
            </delete>

            <delete id="deleteByEntity" parameterType="ItemCategory">
                        delete from item_category
                        <where>
                            <include refid="ItemCategory_where"></include>
                        </where>
            </delete>

            <delete id="deleteByMap" parameterType="java.util.Map">
                    delete from item_category
                    <where>
                        <include refid="ItemCategory_where"></include>
                    </where>
            </delete>

<!--            根据实体，更新实体-->
            <update id="update" parameterType="ItemCategory">
                    update item_category
                    <set>
                           <include refid="ItemCategory_update"></include>
                    </set>
                    <where>
                            <include refid="ItemCategory_where"></include>
                    </where>
            </update>

            <update id="updateById" parameterType="ItemCategory">
                    update item_category
                    <set>
                        <include refid="ItemCategory_update"></include>
                    </set>
                    where id=#{id}
            </update>

            <select id="listByMap" resultMap="ResultMapItemCategory" parameterType="java.util.Map">
                    select <include refid="ItemCategory_field"></include> from item_category
                    <where>
                        <include refid="ItemCategory_where"></include>
                    </where>
            </select>

            <select id="listAll" resultMap="ResultMapItemCategory">
                    select <include refid="ItemCategory_field"></include>
                    from item_category
            </select>

<!--            根据对象查询，返回一个列表-->
            <select id="listAllByEntity" parameterType="ItemCategory" resultMap="ResultMapItemCategory">
                select <include refid="ItemCategory_field"></include>
                from item_category
                <where>
                        <include refid="ItemCategory_where"></include>
                </where>
            </select>

            <select id="load" parameterType="java.lang.Integer" resultMap="ResultMapItemCategory">
                    select <include refid="ItemCategory_field"></include>
                    from item_category
                    where id=#{id}
            </select>

            <select id="getById" parameterType="java.lang.Integer" resultMap="ResultMapItemCategory">
                select <include refid="ItemCategory_field"></include>
                from item_category
                where id=#{id}
            </select>

<!--            map 查询，不分页-->
            <select id="getByMap"  parameterType="java.util.Map" resultMap="ResultMapItemCategory">
                select <include refid="ItemCategory_field"></include> from item_category
                <where>
                    <include refid="ItemCategory_where"></include>
                </where>
            </select>

<!--            根据对象查询，不分页-->
            <select id="getByEntity" parameterType="ItemCategory" resultMap="ResultMapItemCategory">
                    select  <include refid="ItemCategory_field"></include>
                    from item_category
                    <where>
                            <include refid="ItemCategory_where"></include>
                    </where>
            </select>

            <select id="findByMap" parameterType="java.util.Map" resultMap="ResultMapItemCategory">
                    select <include refid="ItemCategory_field"></include>
                    from item_category
                    <where>
                            <include refid="ItemCategory_where"></include>
                    </where>
            </select>

            <select id="findByEntity" parameterType="ItemCategory" resultMap="ResultMapItemCategory">
                    select <include refid="ItemCategory_field"></include>
                    from item_category
                    <where>
                            <include refid="ItemCategory_where"></include>
                    </where>
            </select>

            <insert id="insertBatch" parameterType="java.util.List">
                    insert <include refid="ItemCategory_field"></include>
                    from item_category
                    values
                    <foreach collection="list" item="item" index="index" separator=",">
                            (#{item.name},#{item.pid},#{item.isDelete})
                    </foreach>
            </insert>

            <update id="updateBatch" parameterType="java.util.List">
                    <foreach collection="list" item="item" index="index" separator=";">
                            update item_category
                            <set>
                                    <if test="item.name != null and item.name !=''">name=#{item.name},</if>
                                    <if test="item.pid != null and item.pid !=''">pid=#{item.pid},</if>
                                    <if test="item.isDelete != null and item.isDelete !=''">isDelete=#{item.isDelete},</if>
                            </set>
                            <where>
                                    <if test="item.id != null and item.id !=''">and id=#{item.id}</if>
                            </where>
                    </foreach>
            </update>

<!--        封装纯sql语法-->
            <select id="getBySqlReturnMap" resultType="java.util.Map">
                    ${sql}
            </select>

            <select id="getBySqlReturnEntity" resultMap="ResultMapItemCategory">
                    ${sql}
            </select>

            <select id="listBySqlReturnEntity" resultMap="ResultMapItemCategory">
                    ${sql}
            </select>

            <select id="findBySqlReturnEntity"  resultMap="ResultMapItemCategory">
                ${sql}
            </select>

            <update id="updateBySql" >
                ${sql}
            </update>

            <delete id="deleteBySql" >
                ${sql}
            </delete>
</mapper>